<?php

namespace App\Filament\Resources\EmployeeResource\Pages;

use App\Filament\Resources\EmployeeResource;
use App\Models\Employee;
use App\Models\SoldeCompte;
use Filament\Actions;
use Filament\Infolists\Infolist;
use Filament\Resources\Pages\Concerns\InteractsWithRecord;
use Filament\Resources\Pages\ListRecords;
use Filament\Resources\Pages\ViewRecord;
use Filament\Tables\Columns\Summarizers\Sum;
use Filament\Tables\Columns\TextColumn;
use Filament\Tables\Table;
use pxlrbt\FilamentExcel\Actions\Tables\ExportBulkAction;
use pxlrbt\FilamentExcel\Exports\ExcelExport;

class SoldePage extends ListRecords
{
    use InteractsWithRecord;
    protected static string $resource = EmployeeResource::class;

    protected ?string $heading = "Solde de Compte";
    public function mount(): void
    {
        $this->record = Employee::whereSlug(request('record'))->first();

    }

    public function getBreadcrumb(): ?string
    {
        return 'Solde de compte'; // TODO: Change the autogenerated stub
    }

    /**
     * @return string|null
     */

    public function table(Table $table): Table
    {
        return $table
            ->query(SoldeCompte::query()->where('employee_id', $this->record->id))
            ->columns([
                TextColumn::make('donnees'),
                TextColumn::make('montant')
                    ->prefix(function ($record) {
                        if ($record->donnees == SoldeCompte::TOTAL)
                        {
                          return ' ';
                        }
                        return $record->donnees == SoldeCompte::SALAIRE_MENSUEL || $record->donnees == SoldeCompte::TREIZIEME_MOIS || $record->donnees == SoldeCompte::NOMBRE_DE_JOURS_DE_CONGES_PAYES_DU || $record->donnees == SoldeCompte::PREAVIS ? '+ ' : '- ';
                    })
                    ->disabled(fn ($record) => $record->donnees == SoldeCompte::SALAIRE_MENSUEL || $record->donnees == SoldeCompte::NOMBRE_DE_JOURS_DE_CONGES_PAYES_DU|| $record->donnees == SoldeCompte::TOTAL),

            ])
            ->paginated(false)
            ->bulkActions([
                ExportBulkAction::make()
                    ->exports([
                        ExcelExport::make()
                            ->fromTable()
                            ->withFilename($this->record->nom.' '.$this->record->prenoms.' - Solde Compte'),
                    ]),
            ]);
    }

}
